<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">

<flight_plan alt="8" ground_alt="0" lat0="51 59 27.6" lon0="4 22 42.0" max_dist_from_home="60" name="Delft Basic" security_height="2">
  <header>
#include "autopilot.h"
#include "subsystems/electrical.h"
#include "subsystems/datalink/datalink.h"
</header>
  <waypoints>
    <waypoint name="HOME" x="0.0" y="0.0"/>
    <waypoint name="CLIMB" x="0.0" y="5.0"/>
    <waypoint name="STDBY" x="-2.0" y="-5.0"/>
    <waypoint name="p1" lat="51.9910399" lon="4.3783994"/>
    <waypoint name="p2" lat="51.9910399" lon="4.3783994"/>
    <waypoint name="p3" lat="51.9910399" lon="4.3783994"/>
    <waypoint name="p4" lat="51.9910399" lon="4.3783994"/>
    <!--waypoint name="c1" x="-15.0" y="15.0"/>
    <waypoint name="c2" x="0.0" y="15.0"/>
    <waypoint name="c3" x="15.0" y="15.0"/>
    <waypoint name="c4" lat="51.9912720" lon="4.3781452"/-->
    <waypoint name="CAM" x="14.2" y="-29.4"/>
    <waypoint name="TD" x="-3.0" y="-5.0"/>
    <waypoint lat="51.9912760" lon="4.3778496" name="_CF1"/>
    <waypoint lat="51.9913545" lon="4.3783278" name="_CF2"/>
    <waypoint lat="51.9907045" lon="4.3788059" name="_CF3"/>
    <waypoint lat="51.9905459" lon="4.3783361" name="_CF4"/>
  </waypoints>
  <sectors>
    <sector color="red" name="Field">
      <corner name="_CF1"/>
      <corner name="_CF2"/>
      <corner name="_CF3"/>
      <corner name="_CF4"/>
    </sector>
  </sectors>
  <variables>
    <variable var="isRouteFinished" init="0.0" type="float" min="0." max="1.0" step="1.0" values="EnRoute|ReadyToGo"/>
  </variables>
  <exceptions>
    <exception cond="!InsideField(GetPosX(), GetPosY())" deroute="stay_p1"/>
    <exception cond="(datalink_time>30) && (exception_flag[0] == 0)" deroute="land here"/>
    <exception cond="(electrical.bat_low) && (exception_flag[1] == 0)" deroute="land here"/>
  </exceptions>
  <blocks>
    <block name="Wait GPS">
      <call fun="NavKillThrottle()"/>
      <while cond="!GpsFixValid()"/>
    </block>
    <block name="Geo init">
      <while cond="LessThan(NavBlockTime(), 10)"/>
      <call fun="NavSetGroundReferenceHere()"/>
    </block>
    <block name="Holding point">
      <call fun="NavKillThrottle()"/>
      <set var="exception_flag[0]" value="0"/>
      <set var="exception_flag[1]" value="0"/>
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>
    <block name="Start Engine">
      <!--exception cond="0.5 > isReady" deroute="Takeoff" /-->
      <set var="isRouteFinished" value="0.0"/>
      <call fun="NavResurrect()"/>
      <attitude pitch="0" roll="0" throttle="0" until="stage_time>2" vmode="throttle"/>
      <deroute block="Takeoff"/>
    </block>
    <block name="Takeoff" strip_button="Takeoff" strip_icon="takeoff.png">
      <exception cond="stateGetPositionEnu_f()->z > 2.0" deroute="route"/>
      <call fun="NavSetWaypointHere(WP_CLIMB)"/>
      <stay climb="nav_climb_vspeed" vmode="climb" wp="CLIMB"/>
    </block>
    <block name="Standby" strip_button="Standby" strip_icon="home.png">
      <stay wp="STDBY"/>
    </block>
    <block name="stay_p1">
      <!--set var="isRouteFinished" value="1.0"/-->
      <stay wp="p1"/>
    </block>
    <block name="route">
      <go from="p1" hmode="route" wp="p2"/>
      <stay wp="p2" alt="3" until="stage_time>10" />
      <go from="p2" hmode="route" wp="p3"/>
      <stay wp="p3" alt="3" until="stage_time>10" />
      <go from="p3" hmode="route" wp="p4"/>
      <stay wp="p4" alt="3" until="stage_time>10" />
      <go from="p4" hmode="route" wp="p1"/>
      <!--stay wp="p1" until="stage_time>5" /-->
      <deroute block="land_p1"/>
      <!--deroute block="stay_p1"/-->
    </block>
    <block name="land_p1">
      <call fun="NavCopyWaypoint(WP_TD,WP_p1)"/>
      <deroute block="land"/>
    </block>
    <block name="land here" strip_button="Land Here" strip_icon="land-right.png">
      <call fun="NavSetWaypointHere(WP_TD)"/>
      <set var="exception_flag[0]" value="1"/>
      <set var="exception_flag[1]" value="1"/>
    </block>
    <block name="land">
      <go wp="TD"/>
    </block>
    <block name="flare">
      <exception cond="NavDetectGround()" deroute="Holding point"/>
      <exception cond="!nav_is_in_flight()" deroute="landed"/>
      <call fun="NavStartDetectGround()"/>
      <stay climb="nav_descend_vspeed" vmode="climb" wp="TD"/>
    </block>
    <block name="landed">
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>
  </blocks>
</flight_plan>
